#!/bin/bash

# Copyright 2008, 2009, 2010, 2013, 2016, 2018, 2019, 2020, 2021, 2022  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=vim
VIMBRANCH=9.0
CTAGSVER=5.8
BUILD=${BUILD:-1}

# The possible settings for this are yes/no/dynamic.
PERLINTERP=${PERLINTERP:-dynamic}

if [ -r vim-${VIMBRANCH}*.tar.?z ]; then # if there's a source archive already, use the version number from it:
  VERSION=$(echo vim-${VIMBRANCH}*.tar.?z | rev | cut -f 3- -d . | cut -f 1 -d - | rev)
else # need to fetch the latest source archive for this branch:
  VERSION="$(wget -q -O - https://www.vim.org | grep "^${VIMBRANCH}" | head -n 1)"
  ( lftpget https://github.com/vim/vim/archive/v${VERSION}.tar.gz
    gzip -d v${VERSION}.tar.gz
    mv v${VERSION}.tar vim-${VERSION}.tar
    plzip -9 -n 6 vim-${VERSION}.tar
    if [ ! -r vim-${VERSION}.tar.lz ]; then
      echo "ERROR:  Something went wrong trying to fetch https://github.com/vim/vim/archive/v${VERSION}.tar.gz"
      exit 1
    fi
  ) || exit 1
fi

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

# If dynamic support for Ruby works with this $ARCH, then allow it:
if [ "$ARCH" = "x86_64" ]; then
  RUBYDYNAMIC="=dynamic"
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

PYVER=$(python -V 2>&1 | cut -f 2 -d' ' | cut -f 1-2 -d.)

if [ "$ARCH" = "x86_64" ]; then
  export SLKCFLAGS="-O2 -fPIC"
  export LIBDIRSUFFIX="64"
else
  export SLKCFLAGS="-O2"
  export LIBDIRSUFFIX=""
fi
export SLKLDFLAGS="-L/usr/lib${LIBDIRSUFFIX}"

TMP=${TMP:-/tmp}
OUTPUT=${OUTPUT:-/tmp}
PKG=$TMP/package-vim

rm -rf $PKG
mkdir -p $TMP $PKG

# ctags was once a part of vim,
# but now we have to bundle it in
cd $TMP
rm -rf ctags-$CTAGSVER
tar xvf $CWD/ctags-$CTAGSVER.tar.?z || exit 1
cd ctags-$CTAGSVER || exit 1
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

# patch to solve an issue introduced by glibc-2.34 from http://deb.debian.org/debian/pool/main/e/exuberant-ctags/exuberant-ctags_5.9~svn20110310-15.debian.tar.xz
zcat $CWD/ctags.use-conventional-unused-marker.patch.gz | patch -Esp1 --verbose || exit 1

CFLAGS="$SLKCFLAGS" LDFLAGS="$SLKLDFLAGS" \
./configure \
  --prefix=/usr \
  --build=$ARCH-slackware-linux
make $NUMJOBS || make || exit 1
mkdir -p $PKG/usr/bin
cat ctags > $PKG/usr/bin/ctags
chmod 755 $PKG/usr/bin/ctags
mkdir -p $PKG/usr/man/man1
cat ctags.1 | gzip -9c > $PKG/usr/man/man1/ctags.1.gz
mkdir -p $PKG/usr/doc/ctags-$CTAGSVER
cp -a \
  COPYING* EXTENDING.html FAQ INSTALL INSTALL.oth NEWS README* \
  $PKG/usr/doc/ctags-$CTAGSVER
chmod 644 $PKG/usr/doc/ctags-$CTAGSVER/*

cd $TMP
rm -rf vim-${VERSION}
tar xvf $CWD/vim-${VERSION}.tar.?z || exit 1

config_vim() {
CFLAGS="$SLKCFLAGS" \
./configure \
  $* \
  --prefix=/usr \
  --with-python-config-dir=/usr/lib${LIBDIRSUFFIX}/python$PYVER/config \
  --with-python3-config-dir=$(python3-config --configdir) \
  --enable-perlinterp=$PERLINTERP \
  --enable-pythoninterp=dynamic \
  --enable-python3interp=dynamic \
  --enable-rubyinterp${RUBYDYNAMIC} \
  --enable-tclinterp=dynamic \
  --disable-canberra \
  --enable-multibyte \
  --enable-cscope \
  --with-features=huge \
  --with-compiledby="<volkerdi@slackware.com>" \
  --with-x \
  --build=$ARCH-slackware-linux || exit 1
}

cd $TMP/vim-$VERSION || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

config_vim --without-x --disable-gui || exit 1
make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

rsync -lprvt $PKG/usr/share/man/ $PKG/usr/man/
rm -r $PKG/usr/share/man

# Don't make backups in /var/spool/cron/*, which fixes "crontab -e":
zcat $CWD/vim.vimrc.diff.gz | patch -p1 --verbose || exit 1

cp -a runtime/vimrc_example.vim runtime/vimrc.new

# Add patched vimrc to the package:
cat runtime/vimrc.new > $PKG/usr/share/vim/vimrc.new

# Don't package gvim.desktop - it will be included in the vim-gvim package:
rm -f $PKG/usr/share/applications/gvim.desktop

# Move the vim.desktop into the docs directory. There's really not much use
# for this .desktop file. It's easy enough to just open a terminal and run
# vim in it without this.
mkdir -p $PKG/usr/doc/vim-$VERSION
mv $PKG/usr/share/applications/vim.desktop $PKG/usr/doc/vim-$VERSION

# Remove empty directory:
rmdir $PKG/usr/share/applications

# Fix manpage symlinks:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

# Legacy binary links:
( cd $PKG/usr/bin ; rm -rf rview )
( cd $PKG/usr/bin ; ln -sf vim rview )
( cd $PKG/usr/bin ; rm -rf rvim )
( cd $PKG/usr/bin ; ln -sf vim rvim )
( cd $PKG/usr/bin ; rm -rf view )
( cd $PKG/usr/bin ; ln -sf vim view )
( cd $PKG/usr/bin ; rm -rf eview )
( cd $PKG/usr/bin ; ln -sf vim eview )
( cd $PKG/usr/bin ; rm -rf evim )
( cd $PKG/usr/bin ; ln -sf vim evim )

# These should not be shipped:
rm -f $PKG/usr/bin/{ex,vi}

mkdir -p $PKG/usr/doc/vim-$VERSION
cp -a README.txt $PKG/usr/doc/vim-$VERSION
find $PKG/usr/doc/vim-$VERSION -type f | xargs chmod 644
( cd $PKG/usr/doc/vim-$VERSION ; rm -rf doc )
( cd $PKG/usr/doc/vim-$VERSION ; ln -sf /usr/share/vim/vim$(echo $VIMBRANCH | tr -d .) doc )

mkdir -p $PKG/install
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc.vim > $PKG/install/slack-desc

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/vim-$VERSION-$ARCH-"$BUILD"_SBo.txz


